#DataSource Configuration
spring.datasource.url=jdbc:mysql://localhost/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root

#Spring configuration to enable the generate-ddl (create , delete, update...)
#spring.jpa.generate-ddl=true

#Hibernate configuration to drop table if exists and create the tables automatically again
#spring.jpa.hibernate.ddl-auto=create



#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

#Para pegar os
spring.flyway.locations=classpath:db/migration,classpath:db/testdata

#Hibernate configuration to show the sql commands
spring.jpa.show-sql=true

#To use the ENGINE InnoDB
spring.jpa.properties.hibernate=org.hibernate.dialect.MySQL5Dialect

#Configurações do Pool de conexões
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=3
spring.datasource.hikari.idle-timeout=10000

#Para reduzir o size do payload da resposta da requisição
server.compression.enabled=true

#Para lançar exceções do tipo handleInvalidFormatException em campos ignorados e inexistentes no nosso modelo de domínio
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true

#Habilitando o lançamento da exceção NoHandlerFoundException
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

#Upload file settings  | Obs.: Vamos criar um validador por vamos comentar
#Size max of file | default value is 1MB
#spring.servlet.multipart.max-file-size=20KB
#Size max of request | default value is 10MB
#spring.servlet.multipart.max-request-size=20MB


#Armazenamento local
algafood.storage.local.diretorio-fotos=catalogo
algafood.storage.tipo=local

#Armazenamento na aws

algafood.storage.s3.bucket=algafoodapi
algafood.storage.s3.regiao=eu-north-1
algafood.storage.s3.diretorio-fotos=catalogo

#Envio de email usando o servidor SNMTP do  SENDGRID,
#spring.mail.host=smtp.sendgrid.net
#spring.mail.port=587
#spring.mail.username=apikey
#spring.mail.password=  #Será passada via IDE

#Envio de email usando o servidor SMTP da  AWS SES,
spring.mail.host=email-smtp.eu-north-1.amazonaws.com
spring.mail.port=587
algafood.email.remetente=AlgaFood <bjbmiguel@gmail.com>
#Tipo de implementação de email (Smtp, Fake e SandBox)
algafood.email.impl=fake
spring.freemarker.settings.locale=pt_BR
#Email de teste
algafood.email.sandbox.destinatario=bjbmiguel@gmail.com

spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

#spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://localhost:8081/oauth/check_token
spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:keys/algafood-pkey.pem










